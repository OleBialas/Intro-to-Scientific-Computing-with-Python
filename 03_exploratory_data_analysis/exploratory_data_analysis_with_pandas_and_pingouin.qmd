---
title: "Exploratory Data Analysis with Pandas and Pingouin"
engine: Jupyter
---

```{python}
import pandas as pd
import pingouin as pg
```

## 1. Exploring a Data Set in Pandas

| Code | Description |
| --- | --- |
| `df = pd.read_csv("mydata.csv")` | Read the file `"mydata.csv"` into a pandas data frame and assign it to the variable `df` |
| `df.head(5)` | Print the first 5 rows of in `df` |
| `df["var1"]` | Access the column with the name `"var1"` in `df` |
| `df["var1"].min()` | Get the minimum value of column `"var1"` |
| `df["var1"].max()` | Get the maximum value of column `"var1"` |
| `df["var1"].mean()` | Compute the mean value of column `"var1"` |
| `df["var1"].unique()` | Get all unique values of column `"var1"` |

::: {.cell .markdown}
### Exercises
:::

Read the file `titanic.csv` into a pandas data frame

:::{.sol}
```{python}
df = pd.read_csv("titanic.csv")
```
:::


## 2. Filtering a Data Frame

| Code | Description |
| --- | --- |
| `mask = df["var2"]=="a"` | Create a `mask` of boolean values that is `True` where the value of column `"var1"` is `"a"` and `False` otherwise |
| `mask = df["var1"]>=0` | Create a `mask` of boolean values that is `True` where the value of column `"var1"` is greater or equal to `0` and `False` otherwise |
| `mask = df["var1"].isin([1,2,3])` | Create a `mask` of boolean values that is `True` where the value of column `"var1"` is contained in the list `[1,2,3]` and `False` otherwise |
| `df_filtered = df[mask]` | Get the rows of `df` where the `mask` is `True` and assign this new, filtered, data frame to a variable `df_filtered` |
| `df_filtered.to_csv("mydata_filt.csv")` | Write the filtered data frame to a file called `"mydata_filt.csv"` |

## 3. Running Statistical Tests with Pingouin

| Code | Description |
| --- | --- |
| `pg.ttest(x, y)` | Run a T-test to find whether there is a significant difference in the mean of the distributions between the variables `x` and `y` |
| `pg.corr(x,y)` | Compute pearson's correlation between the variables `x` and `y` |
| `pg.anova(df, dv="score", between="class")` | Run a one-way anova on the data frame `df` to test if there is a signifcant difference in `"score"` between the different groups in the column `"class"` |
| `pg.linear_regression(x, y)` | Linear regression between variables `x` and `y` |

